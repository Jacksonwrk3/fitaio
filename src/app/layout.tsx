import type { Metadata } from "next";
import "./globals.css";
import { useState, useEffect } from "react";
import { Session } from "@supabase/gotrue-js/src/lib/types";
import { createClient } from "./util/supabase/client";
import { SessionContext } from "./context/SessionContext";
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [session, setSession] = useState<null | Session>(null);
  const supabase = createClient();
  useEffect(() => {
    // Extracting the subscription object from the supabase auth listener
    const {
      data: { subscription },
    } = supabase.auth.onAuthStateChange((event, session) => {
      // Check if the auth event is 'SIGNED_OUT'
      if (event === "SIGNED_OUT") {
        // If signed out, set session to null
        setSession(null);
      }
      // Check if there is a valid session object (user is signed in)
      else if (session) {
        // Set the session state to the current session
        setSession(session);
      }
    });

    // Cleanup function: Unsubscribe from the auth state change listener when the component unmounts
    return () => {
      subscription.unsubscribe();
    };
  }, []);
  return (
    <html lang="en">
      <body>
        <SessionContext.Provider value={session}>
          {children}
        </SessionContext.Provider>
      </body>
    </html>
  );
}
